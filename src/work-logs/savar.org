#+TITLE: Savar's Time sheet
#+AUTHOR: Savar Mehrotra
#+DATE: [2017-06-01 Thu]
#+SETUPFILE: ../org-templates/level-1.org
#+TAGS: boilerplate(b)
#+EXCLUDE_TAGS: boilerplate
#+OPTIONS: ^:nil

* Introduction
  This document hols the time sheets for my work during the summer internship
  at VLEAD, IIIT Hyderabad

* Month of June
** Week 1 [2017-06-01 Thu] till [2017-06-04 Sun]
     * [2017-06-01 Thu] In the morning a breif overview of the whole internship
       programme was given.In the afternoon a detailed explanation of my alloted
       project i.e. Continous Integration was done by the mentor.Following this
       I spent time configuring emacs with the required packages and installing
       Vagrant and virtual box.A readup on CI tools was also done.  
     * [2017-06-01 Fri] Learnt more about using the virtual box using
       Vagrant.Explored the Lab Data Service, setup the required environment
       for it and deployed it on local host.Explored and tried understanding
       the working of LDS.Did a reading on REST and RESTful services.Explored
       various functions of REST APIs. 

** Week 2 [2017-06-05 Mon] till [2017-06-11 Sun]
	 *[2017-06-05 Mon] : The issue for the requirements document was raised and successfully resovled 
	 by creating and pushing the document on our repository.The document included the basic application and
	 functional requirements of the continuous-integration microservice.The workflow for the application was also  d		 designedand uploaded.A few open source CI tools to serve our purpose were shortlisted and further researched upon.	
	 Their various workflow and working environment were compared and finally 
	 after a brainstorming session with my mentor and teammate we decided to stick with Jenkins CI for our 		
	 contiunous-integration requirement.One of the main reasons to choose Jenkins over Travis and other such CI tools
	 was the flexibility that Jenkins can provide with hosting and configuration.	
	 Further we also came up with the possibilty of containerising the whole micro-service into a docker container 	
	 which would facilitate the hosting of the service. 
	 
	 *[2017-06-06 Tue]: In the morning we had a stand up team meeting with
   	Thirumal Sir where we discussed our progress and goals for the week ahead.
   	The first issue of deploying and running the Jenkins on the local machine
  	 was successfully completed.Test were also run using sample test
   	projects.While doing this I looked into the working of the
   	Jenkins CI tool and understood more about it's working mechanism.Jenkins
   	basically needs a JRE to function.This environment is provided by a
   	servlet-container called Winstone which comes inbuilt with the .war. Other custom
  	 web containers and web servers like Apache Tomcat,IBM WebSphere, GlassFish,
   	Jetty,etc can also be configured to host Jenkins.We created an Ubuntu
   	template using OpenVZ on the Base 4 server to run a full test of
   	Jenkins.Certain issues came up with setting up JDK on the ubuntu
   	template.We are still working on resolving these issues.
	
	[2017-06-07 Wed]: The issue of setting up the Java environment was resolved.It finally worked on the Ubuntu 16.04 		template set up on the base 4 test server. After installing Java, the Jenkins CI tool was also successfully deployed on 	the base 4 server. The completion of documentation for this whole deployement process from scratch is underway.A 		complete workthrough of Jenkins was also successfully done on the local host.We were able to connect the CI tool to the     git repo of the LDS service.The polling mechanism was activated on the Jenkins,by doing this any changes made to our repo 		triggered an automatic build and a run of the test cases on the local host.Jenkins was also successfully configured to do 	  a post build operation of posting the newly created files on the Apache doc server that we created on base 4 .
	This whole thing strongly supports the fact that Jenkins would be an ideal tool to adopt as a solution for our Continuous 	  Integration purpose.There are certain optimisation issues that we are still resolving one of them being the fact of 		finiding an alternative for constantly polling the github repo since this would unnecessarily consume the server system 	resources.
	
	[2017-06-08 Thu]: Another full setup of creating a new conatiner, setting up JRE and the Jenkins CI tool was successfully
	done and documented.The doc server setup up on the base4 was given a public IP.A few tests were run with Jenkins CI 		setup on the base 4 and the Apache serving on the doc server.The doc file were successfully being posted on the Apache 		web server.This completes our first milestone.The optimisation issue that we were facing yesterday with polling the git 	repo was also resloved by creating web-hooks.The shell script for the build step was also completed and pushed on the 		repository.A few issues with the server cloning are still to be resolved.
	 	 
	[2017-06-09 Fri]: We had our first weekly presentation were we presented our current progress and got a brief overview of 	  everyone elses too. A lot of useful suggestions and takeways were received from the heads.We were looking into how to go 	   about incorporating these changes in our work.Team discussions regarding this also took place.Variuous valuable inputs 	  from Lalit sir who has had prior experience with Jenkins were also received.I spent a little time exploring and 	  understanding the Java source code of the Jenkins CI.I also did a bit of research on coupling Jenkins with AWS.

[2017-06-12 Mon]:We had successfully finished our work for the milestone and no new work had been assinged, so I din't have anything specific to work on today.I spent most of my time doing more research on CI tools.I looked into Microsoft Team Foundation Build which had been recommended by Lalit sir.TFB would not be a good option becuase of it's minimal support for Open Source projects.I reasearched more about Continuous Integration in agile, with the aim of finding the stages where we could use CI tools to improve our release process.I learnt a lot about the current industry standards with CI.
 
[2017-06-12 Tue]:In the morning we had our team meeting with Thirumal sir where we were assinged new tasks.The new tasks have been raised as issues on our repo.I had been assinged to use web sockets to create a feature to continuously display the logs from ADS.I started my work on this shortly after the meeting.I was able to use tornado websockets on a small scale application.This helped me get a clear picture of the working mechanism.To further enhance my understanding I further read articles and watched video tutorials.To understand the working of ADS, I tried deploying it on my machine.There were some issues that I faced setting up and runnning centos.Hopefully once I am done running ADS I will start my work on the feature.

[2017-06-13 Wed]:The initial Design for the Output Console feature after being approved by Thirumal sir was made and pushed.The required workflow and implemantaion methodology was also added to the repo. After experimenting with websocket on small scale applications I was able to further plan my implentation better.After discussing with my mentor Mr.Sripathi we decided to use Java Script on the Client end i.e. Controller Server and stick to Tornado on the server side i.e. Log Server.
All the further work related to this feature is going to be pushed to the outputConsole folder.

* Month of July
